input {
	file {
		path => "/usr/share/logstash/data/books.csv"
		start_position => "beginning"
		sincedb_path => "/dev/null"
		tags => ["books"]
	}
	file {
		path => "/usr/share/logstash/data/popular_year.csv"
		start_position => "beginning"
		sincedb_path => "/dev/null"
		tags => ["years"]
	}
	file {
		path => "/usr/share/logstash/data/rating_of_autors.csv"
		start_position => "beginning"
		sincedb_path => "/dev/null"
		tags => ["autors"]
	}
}
filter {
	if "books" in [tags]{
		csv {
			columns => ["id", "book_id", "books_count", "authors", "original_title", "title", "language_code", "original_publication_year"]
			
			skip_header => "true"
			
			convert => { 
				"id" => "integer"
				"book_id" => "integer"
				"books_count" => "integer"
				"original_publication_year" => "integer"
			}
		}
	}
	if "years" in [tags]{
	csv {
			columns => ["original_publication_year", "count_to_read"]
			
			skip_header => "true"
			
			convert => { 				
				"original_publication_year" => "integer"
				"count_to_read" => "integer"
			}
		}
	}
	if "autors" in [tags]{
	csv {
			columns => ["authors", "avg(rating)"]
			
			skip_header => "true"
			
			convert => { 
				"avg(rating)" => "float"
			}
		}
	}
}

output {
	if "books" in [tags]{
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "all_books"
			template => "/usr/share/logstash/template/books_template.json"
			template_name => "all_books"
			template_overwrite => true
			manage_template => true
			
		}
	}
	if "years" in [tags]{
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "popular_year"
			template => "/usr/share/logstash/template/years_template.json"
			template_name => "popular_year"
			template_overwrite => true
			manage_template => true
		}
	}
	if "autors" in [tags]{
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "rating_of_autors"
			template => "/usr/share/logstash/template/autors_template.json"
			template_name => "rating_of_autors"
			template_overwrite => true
			manage_template => true
		}
	}
	stdout {
        codec => "dots"
	}
	if "_dateparsefailure" in [tags] {
        stdout { codec => "rubydebug" }
	}
}
